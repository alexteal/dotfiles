#!/usr/bin/env bash
# Usage
#================================================================
# HEADER
#================================================================
#% SYNOPSIS
#+    ${SCRIPT_NAME} [remote_port:local_port] host [-v] [ssh compatible opts]
#%
#% DESCRIPTION
#%    This script is used to forward a remote port to a local port using SSH.
#%
#% OPTIONS
#%    -h, --help                    Print this help
#%    -v, --version                 Print script information
#%
#% EXAMPLES
#%    ${SCRIPT_NAME} 8888:8889 remote
#%    ${SCRIPT_NAME} 8888 remote
#%
#================================================================
#- IMPLEMENTATION
#-    version         ${SCRIPT_NAME}  0.0.1
#-    author          Alex Teal
#-    copyright       (none)
#-    license         (none)
#-    script_id       1
#-
#================================================================
#  HISTORY
#     2022/08/27 : alexteal : Script creation
# 
#================================================================
#  DEBUG OPTION
#    set -n  # Uncomment to check your syntax, without execution.
#    set -x  # Uncomment to debug this shell script
#
#================================================================
# END_OF_HEADER
#================================================================
  #== needed variables ==#
SCRIPT_HEADSIZE=$(head -200 ${0} |grep -n "^# END_OF_HEADER" | cut -f1 -d:)
SCRIPT_NAME="$(basename ${0})"
  #== usage functions ==#
usage() { printf "Usage: "; head -${SCRIPT_HEADSIZE:-99} ${0} | grep -e "^#+" | sed -e "s/^#+[ ]*//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g" ; }
usagefull() { head -${SCRIPT_HEADSIZE:-99} ${0} | grep -e "^#[%+-]" | sed -e "s/^#[%+-]//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g" ; }
scriptinfo() { head -${SCRIPT_HEADSIZE:-99} ${0} | grep -e "^#-" | sed -e "s/^#-//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g"; }
function is_valid_port() {
    if [[ $1 =~ ^[0-9]+$ ]] && [ $1 -le 65535 ]; then
        return 0
    else
        return 1
    fi
}

REMOTE_PORT=${1%%:*}
LOCAL_PORT=${1#*:}

if [ "$REMOTE_PORT" == "$LOCAL_PORT" ]; then
    LOCAL_PORT=$REMOTE_PORT
fi
case $1 in
    h )
        usagefull
        ;;
    *) 
        if [[ $1 =~ ":" ]]; then
            IFS=':' read -ra PORTS <<< "$1"
        else
            PORTS=($1)
        fi
        # Check each part of the input
        for port in "${PORTS[@]}"; do
            if ! is_valid_port $port; then
                echo "Not a valid port / number"
                exit 1
            fi
        done
        ssh -o "ServerAliveInterval 10" -o "ServerAliveCountMax 3" -o "ExitOnForwardFailure yes" -L $LOCAL_PORT:localhost:$REMOTE_PORT -N $2 -v
        ;;
esac

