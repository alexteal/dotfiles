-- most painful config file ever
require('packer').startup(function(use)
    use 'wbthomason/packer.nvim'
    --notifications
    use { 'rcarriga/nvim-notify' }
    -- colorschemes
    use { 'NLKNguyen/papercolor-theme' }

    use { "catppuccin/nvim", as = "catppuccin" }
    -- transparent bg
    use { 'xiyaowong/nvim-transparent', disable = false }
    -- async processes
    use { 'nvim-lua/plenary.nvim'}
    -- IDE style things
    use({
        "nvim-telescope/telescope.nvim",
        requires = {
                {'fannheyward/telescope-coc.nvim'},
                {'kdheepak/lazygit.nvim'},
                { "nvim-lua/plenary.nvim"},
                { 'nvim-telescope/telescope-fzf-native.nvim',
                    cmd="make",
                    event = { "BufNewFile", "BufRead", "InsertEnter" },
                },
                { "kdheepak/lazygit.nvim",
                    event = { "BufNewFile", "BufRead", "InsertEnter" },
                }
            },
            config = function()
                require('telescope').load_extension('coc')
                require('telescope').load_extension('lazygit')
                require('telescope').setup({
                    extensions = {
                        coc = {
                            theme = 'ivy',
                            prefer_locations = true, -- always use Telescope locations to preview definitions/declarations/implementations etc
                        }
                    },
                })
            end,
            event  = { "BufNewFile", "BufRead", "InsertEnter" },
        })
    use { 'junegunn/fzf', run = './install --bin',
        event  = { "BufNewFile", "BufRead", "InsertEnter" }
    }
    use { 'kyazdani42/nvim-web-devicons',
        disable = false ,
        config = function() require'nvim-web-devicons'.setup{} end,
    }
    use { 'kyazdani42/nvim-tree.lua',
        requires = { 'kyazdani42/nvim-web-devicons' },
    }
    -- snippets
    use { 'honza/vim-snippets',
        requires = 'SirVer/ultisnips' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
    }
    -- syntax / code completion
    use { 'neoclide/coc.nvim',
        branch='release',
    }
    use { 'prabirshrestha/vim-lsp' , disable = false ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    use { 'alvan/vim-closetag',
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft={'javascript', 'typescript', 'css', 'less', 'scss', 'json',
        'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html', 'tsx','jsx',
        'typescriptreact'},
    }
    use { 'LionC/nest.nvim' }
    use { 'rafcamlet/nvim-luapad', requires = "antoinemadec/FixCursorHold.nvim",
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft = {'lua'},
    }
    -- jsx linting
    use { 'pangloss/vim-javascript',
        event  = { "BufNewFile", "BufRead", "BufEnter" },
        ft={'tsx','jsx'},
    }
    use { 'maxmellon/vim-jsx-pretty',
        event = {"BufNewFile", "BufRead", "BufEnter" },
        ft = {'tsx','jsx'},
    }

    -- ESLinter for webdev
    use { 'neovim/nvim-lspconfig', disable = false,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    use { 'jose-elias-alvarez/null-ls.nvim', disable = false ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    use { 'MunifTanjim/eslint.nvim' , disable =false  ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft={'javascript', 'typescript', 'css', 'less', 'scss', 'json',
        'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html', 'tsx','jsx',
        'typescriptreact'},
    }
    -- Java linting / completion
    use { 'hrsh7th/nvim-cmp' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
    }
    use { 'hrsh7th/cmp-nvim-lsp' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
    }
    use { 'williamboman/nvim-lsp-installer' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
    }
    use { 'puremourning/vimspector' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft = {'java'},
    }
    use { 'mfussenegger/nvim-jdtls' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft = {'java'},
        disable = true, -- we're using coc-java instead for now
    }
    use { 'artur-shaik/jc.nvim' ,
        config = function() require('jc').setup{} end,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        ft = {'java'},
        disable = true,
    }
    -- debugger
    use { "rcarriga/nvim-dap-ui", requires = {"mfussenegger/nvim-dap"},
        event  = { "BufNewFile", "BufRead", "InsertEnter" }, }
    -- Prettier Async, also for webdev
    use { 'prettier/vim-prettier',
        run = 'yarn install --frozen-lockfile --production',
        ft={'javascript', 'typescript', 'css', 'less', 'scss', 'json',
        'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html', 'tsx','jsx',
        'typescriptreact'},
        disable = false ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    use { 'tjdevries/nlua.nvim' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    use { 'euclidianAce/BetterLua.vim' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    -- syntax highlighting
    use { 'nvim-treesitter/nvim-treesitter', run = ":TSUpdate" ,
        config = function()
        require('nvim-treesitter.configs').setup {
          highlight = {
              enabled = true
          }
        }
        end,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}



-- out of date and unmaintained, possibly mothballed by creater
--    use { 'numirias/semshi', run = ":UpdateRemotePlugins" ,
--        event  = { "BufNewFile", "BufRead", "InsertEnter" },
--        ft = {'python'},}

    use { 'lervag/vimtex' }
    -- random tools
    use { 'vimwiki/vimwiki' }
    use { 'lambdalisue/suda.vim' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },} -- write using sudo with SudaWrite
    use { 'jamessan/vim-gnupg' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },}
    -- startup screen
    use { 'mhinz/vim-startify'}
    -- colorizer for hex
    use { 'norcalli/nvim-colorizer.lua' ,
        event  = { "BufNewFile", "BufRead", "InsertEnter" },
        config = function() require('colorizer').setup() end,
    }
    -- copilot for funzies
   -- use { 'github/copilot.vim' ,
    --    event = { "BufNewFile", "BufRead", "InsertEnter" },}
    -- disabled packages, for testing or future reference
    -- ##################################################
    -- syntax / code completion
    use { 'lighttiger2505/deoplete-vim-lsp' , disable = true }
    use { 'dense-analysis/ale' , disable = true }
    use { 'romgrk/barbar.nvim', disable = true } -- is nice, but dead buffers stay on bar
    -- deoplete completions
    use { 'Shougo/deoplete.nvim', disable = true}
    use { 'zchee/deoplete-jedi', disable = true}
    -- file viewing
    use { 'scrooloose/nerdtree' ,
        requires = {'ryanoasis/vim-devicons', 'Xuyuanp/nerdtree-git-plugin'},
        disable = true }
    -- etc.
    use { 'ryanoasis/vim-devicons', disable = true }
    -- colorschemes
    use { 'dracula/vim', disable = true  }
    use { 'morhetz/gruvbox', disable = true }
    -- END ##############################################
end)
